" VUNDLE
set nocompatible
filetype off

set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" Plugins
Plugin 'VundleVim/Vundle.vim'

Plugin 'wincent/command-t'
Plugin 'scrooloose/nerdcommenter'
Plugin 'scrooloose/nerdtree'
Plugin 'NLKNguyen/papercolor-theme'
Plugin 'vim-airline/vim-airline'
Plugin 'ntpeters/vim-better-whitespace'
Plugin 'tpope/vim-fugitive'
Plugin 'tpope/vim-obsession'
Plugin 'dhruvasagar/vim-prosession'
Plugin 'christoomey/vim-tmux-navigator'
Plugin 'vim-syntastic/syntastic'

call vundle#end()

" GENERAL
let mapleader = ","
let maplocalleader = ",,"

filetype plugin indent on
set history=500
set omnifunc=syntaxcomplete#Complete
set autoread
set wildmenu
set ruler
set cmdheight=2
set encoding=utf8
set ffs=unix,dos,mac
set number
set mouse=c
set clipboard=unnamedplus
set cursorline
set lazyredraw
set showmatch
set mat=2

" Ignore compiled files
set wildignore=*.o,*~,*.pyc
if has("win16") || has("win32")
    set wildignore+=.git\*,.hg\*,.svn\*
else
    set wildignore+=*/.git/*,*/.hg/*,*/.svn/*,*/.DS_Store
endif

" A buffer becomes hidden when it is abandoned
set hid

" Configure backspace
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Search
set ignorecase
set smartcase
set hlsearch
set incsearch

syntax enable

" Theme
colorscheme PaperColor
set background=dark

" No backups
set nobackup
set nowb
set noswapfile

" Tabs
set expandtab
set smarttab
set shiftwidth=4
set tabstop=4

set sw=0

" Folding
set foldenable
set foldlevelstart=0
set foldnestmax=10
map <leader>z za

map <space> /
map <c-space> ?

" Move between windows
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Switch buffers
map <leader>bl :bnext<cr>
map <leader>bh :bprevious<cr>

" Map tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>
map <leader>tm :tabmove
map <leader>tl :tabnext<cr>
map <leader>th :tabprev<cr>

" Opens a new tab with the current buffer's path
" Super useful when editing files in the same directory
map <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/

" Start gvim in full screen
if has('gui_running')
    set guifont=Monospace\ 13
    set lines=999 columns=999
endif

" Hide men bar, toolbar and scrollbar
set guioptions-=m  "menu bar
set guioptions-=T  "toolbar
set guioptions-=r  "scrollbar
set guioptions-=l "scrollbar
set guioptions-=L "scrollbar

" Map Nerdtree
map <leader>n :NERDTreeToggle<cr>
map <leader>r :NERDTreeFind<cr>

" Custom file extensions
au BufRead,BufNewFile *.launch set filetype=xml
au BufRead,BufNewFile *.test set filetype=xml
au BufRead,BufNewFile *.test.in set filetype=xml
au BufRead,BufNewFile *.dxy set syntax=cpp.doxygen

" edit vimrc/zshrc and load vimrc bindings
nnoremap <leader>ev :vsp $MYVIMRC<CR>
nnoremap <leader>ez :vsp ~/.zshrc<CR>
nnoremap <leader>sv :source $MYVIMRC<CR>

" Clear whitespace on save
"autocmd BufWritePre * %s/\s\+$//e

" Termdebug
let g:termdebug_wide = 1
packadd termdebug

" Syntastic
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*

let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0
let g:syntastic_rst_checkers = ["sphinx"]
let g:syntastic_mode_map = {
    \ "mode": "active",
    \ "passive_filetypes": ["cpp"] }
"let g:syntastic_cpp_remove_include_errors = 1
"let g:syntastic_cpp_check_header = 1
"let g:syntastic_cpp_include_dirs = ["include"]
